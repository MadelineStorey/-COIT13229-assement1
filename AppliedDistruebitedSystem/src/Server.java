/*  TCP server computes tasks sent by the client*/import java.net.*;import java.io.*;public class Server {	public static void main (String args[]) {		try{			int serverPort = 8888;			ServerSocket listenSocket = new ServerSocket(serverPort);            System.out.println("Server running...");			while(true) {				Socket clientSocket = listenSocket.accept();				Connection c = new Connection(clientSocket);			}		} catch(IOException e) {System.out.println("Listen socket:"+e.getMessage());}	}}class Connection extends Thread {	ObjectInputStream in;	ObjectOutputStream out;	Socket clientSocket;	public Connection (Socket aClientSocket) {		try {			clientSocket = aClientSocket;			in = new ObjectInputStream( clientSocket.getInputStream());			out =new ObjectOutputStream( clientSocket.getOutputStream());			this.start();		} catch(IOException e) {System.out.println("Connection:"+e.getMessage());}	}	public void run(){		try {			Drone d = (Drone)in.readObject();                        Fire f = (Fire)in.readObject();                        			System.out.println("Recevied drone information");			// I want to read the information here, look up if it is registered already                                                 System.out.println( "Updating drone information...");// Confirmation message( will need to send this one somewhere other than system                        			out.writeObject(d); // writen to file                        			System.out.println("Saved drone information");			System.out.println("");                       // Need to do some sort of if then statement to chose between fire information and drone information                        System.out.println(" Updating Fire information");                        out.writeObject(f); // writen the fire information to file                         System.out.println ("Saved Fire information ");                        Drone drone = new Drone(droneID,droneName,droneIntialPosition);			//write object ot the server			out.writeObject(drone);			//read object sent by the server			d = (Drone)in.readObject();                        f=(Fire)in.readObject();			System.out.println("The Received Book Details:");			System.out.println("====================================");			                        		}catch (EOFException e){System.out.println("EOF:"+e.getMessage());		} catch(IOException e) {System.out.println("readline:"+e.getMessage());		} catch(ClassNotFoundException ex){					 ex.printStackTrace();		}finally{ try {clientSocket.close();}catch (IOException e){/*close failed*/}}	}}